Expected Files: searchable_array_bag.cpp, searchable_array_bag.hpp, 
searchable_tree_bag.cpp, searchable_tree_bag.hpp, set.cpp, set.hpp

You'll find in this directory some classes:

- bag : an abstract class representing a bag 
- searchable_bag : an abstract class representing a bag with the ability to search in it
- array_bag : an implementation of a bag with an array as underlying data structure
- tree_bag : an implementation of a bag with a binary search tree as underlying data structure

If you don't know what is a set or a bag you can read the attached file: shame.txt

# First Part #
Since a bag without a searching function isn't very useful, implement two classes searchable_array_bag and 
searchable_tree_bag that will inherit from array_bag and tree_bag (respectively) and implement the searchable_bag
abstract class.

# Second Part #
implement the class set that will wrap a searchable_bag and turn it into a set. You'll find in this directory a 
main that must compile with your code. All your classes must be under orthodox canonical form. 
Don't forget the consts. The optimization of your code isn't important in this exercise.